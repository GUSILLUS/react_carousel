{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","handleButton","step","props","images","frameSize","lastItemIndex","length","nextItemIndex","setState","this","itemWidth","animationDuration","infinity","className","style","width","transition","map","img","index","transform","src","alt","disabled","type","onClick","Component","App","htmlFor","name","value","min","max","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f47e1450.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinity: boolean;\n};\n\ntype State = {\n  currentItemIndex: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  handleButton = (step: number) => () => {\n    const { images, frameSize } = this.props;\n    const { currentItemIndex } = this.state;\n    const lastItemIndex = images.length - frameSize;\n    const firstItemIndex = 0;\n    let nextItemIndex = currentItemIndex + step;\n\n    if (step < 0) {\n      if (currentItemIndex === firstItemIndex) {\n        nextItemIndex = lastItemIndex;\n      } else if (nextItemIndex < firstItemIndex) {\n        nextItemIndex = firstItemIndex;\n      }\n    }\n\n    if (step > 0) {\n      if (currentItemIndex === lastItemIndex) {\n        nextItemIndex = firstItemIndex;\n      } else if (nextItemIndex > lastItemIndex) {\n        nextItemIndex = lastItemIndex;\n      }\n    }\n\n    this.setState(() => ({\n      currentItemIndex: nextItemIndex,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { currentItemIndex } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((img, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={img}\n              style={{\n                transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                width={itemWidth}\n                src={img}\n                alt={`emoji-${index + 1}`}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"Carousel__btn\">\n          <button\n            className=\"Carousel__button\"\n            disabled={currentItemIndex <= 0 && !infinity}\n            type=\"button\"\n            onClick={this.handleButton(-step)}\n          >\n            <span className=\"Carousel__arrow\">&#8249;</span>\n            Prev\n          </button>\n          <button\n            className=\"Carousel__button\"\n            disabled={\n              currentItemIndex >= images.length - frameSize && !infinity\n            }\n            data-cy=\"next\"\n            type=\"button\"\n            onClick={this.handleButton(step)}\n          >\n            Next\n            <span className=\"Carousel__arrow\">&#8250;</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n\n        <div className=\"App__btn\">\n          <label\n            htmlFor=\"itemWidthId\"\n            className=\"App__label\"\n          >\n            Item Width:\n            <input\n              name=\"itemWidthId\"\n              type=\"number\"\n              value={itemWidth}\n              min={130}\n              max={250}\n              step={10}\n              onChange={(event) => {\n                this.setState({\n                  itemWidth: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameSizeId\"\n            className=\"App__label\"\n          >\n            Frame Size:\n            <input\n              name=\"frameSizeId\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  frameSize: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"stepId\"\n            className=\"App__label\"\n          >\n            Step:\n            <input\n              name=\"stepId\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  step: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animationDurationId\"\n            className=\"App__label\"\n          >\n            Animation Duration:\n            <input\n              name=\"animationDurationId\"\n              type=\"number\"\n              value={animationDuration}\n              min={500}\n              max={5000}\n              step={500}\n              style={{\n                width: '70px',\n              }}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"infinity\"\n            className=\"App__label\"\n          >\n            Infinity:\n            <input\n              name=\"infinity\"\n              type=\"checkbox\"\n              onChange={(event) => {\n                this.setState({\n                  infinity: event.target.checked,\n                });\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}